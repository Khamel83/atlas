#!/usr/bin/env bash

# Command Interceptor for python - Requires Development Gate
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Function to find real python
find_real_python() {
    # Try common locations
    for path in /usr/bin/python3 /usr/bin/python /bin/python3 /bin/python; do
        if [[ -x "$path" ]]; then
            echo "$path"
            return
        fi
    done
    echo "python3"  # fallback
}

# Check for emergency bypass
if [[ "${DEV_GATE_BYPASS:-}" == "true" ]]; then
    exec "$(find_real_python)" "$@"
fi

# Check if gate has been passed recently
if [[ -f "$PROJECT_ROOT/.dev-gate-passed" ]]; then
    # Try to get file modification time, fallback to just allowing if it fails
    gate_time=$(stat -c %Y "$PROJECT_ROOT/.dev-gate-passed" 2>/dev/null || echo "0")
    current_time=$(date +%s)

    # If we couldn't get the time, just allow it (file exists)
    if [[ "$gate_time" == "0" ]]; then
        exec "$(find_real_python)" "$@"
    fi

    age=$((current_time - gate_time))

    if [[ $age -lt 3600 ]]; then
        # Gate is recent, allow command
        exec "$(find_real_python)" "$@"
    fi
fi

# Gate not passed or stale
echo -e "\033[0;31m‚ùå Development environment not ready\033[0m"
echo -e "\033[0;33mRun: ./bin/dev-gate.sh\033[0m"
echo
echo "This command (python) is blocked until development environment is validated."
echo "Emergency bypass: DEV_GATE_BYPASS=true python"
exit 1